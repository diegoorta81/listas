# Form implementation generated from reading ui file 'arbol.ui'
#
# Created by: PyQt6 UI code generator 6.8.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import sys, time
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QTreeWidgetItem
from PyQt6 import uic
from os import listdir, path, stat
from mimetypes import MimeTypes


class Ui_MainWindow(object):

    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.ln_apunte = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.ln_apunte.setObjectName("ln_apunte")
        self.gridLayout.addWidget(self.ln_apunte, 2, 0, 1, 1)
        self.tree_apuntes = QtWidgets.QTreeWidget(parent=self.centralwidget)
        self.tree_apuntes.setObjectName("tree_apuntes")
        self.gridLayout.addWidget(self.tree_apuntes, 0, 0, 1, 1)
        self.lbl_buscar = QtWidgets.QLabel(parent=self.centralwidget)
        self.lbl_buscar.setObjectName("lbl_buscar")
        self.gridLayout.addWidget(self.lbl_buscar, 1, 0, 1, 1)
        self.btn_buscar = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btn_buscar.setObjectName("btn_buscar")
        self.gridLayout.addWidget(self.btn_buscar, 3, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tree_apuntes.headerItem().setText(0, _translate("MainWindow", "Fecha"))
        self.tree_apuntes.headerItem().setText(1, _translate("MainWindow", "Cuenta Debe"))
        self.tree_apuntes.headerItem().setText(2, _translate("MainWindow", "Cuenta Haber"))
        self.tree_apuntes.headerItem().setText(3, _translate("MainWindow", "Concepto"))
        self.tree_apuntes.headerItem().setText(4, _translate("MainWindow", "Importe"))
        self.lbl_buscar.setText(_translate("MainWindow", "Buscar Apunte"))
        self.btn_buscar.setText(_translate("MainWindow", "Buscar"))
        self.btn_buscar.clicked.connect(self.getDir)

    def getDir(self):
        self.tree_apuntes.clear()
        # ruta indicada por el usuario
        dir = self.ln_apunte.text()
        if path.isdir(dir):
            for element in listdir(dir):
                name = element
                pathinfo = dir + "\\" + name
                informacion = stat(pathinfo)
                if path.isdir(pathinfo):
                    type = "Carpeta de archivos"
                    size = ""
                else:
                    mime = MimeTypes()
                    type = mime.guess_type(pathinfo)[0]
                    size = str(informacion.st_size) + "bytes"
                # fecha de modificacion
                date = str(time.ctime(informacion.st_mtime))
                # crear un array para las filas 
                row = [name,date,type,size]
                self.tree_apuntes.insertTopLevelItems(0,[QTreeWidgetItem(self.tree_apuntes,row)])



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
   


    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    
    MainWindow.show()
    sys.exit(app.exec())


